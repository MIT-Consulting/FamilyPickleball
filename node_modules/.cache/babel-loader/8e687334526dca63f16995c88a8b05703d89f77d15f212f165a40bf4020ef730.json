{"ast":null,"code":"// Common male and female first names\nconst maleNames = new Set(['james', 'john', 'robert', 'michael', 'william', 'david', 'richard', 'joseph', 'thomas', 'charles', 'christopher', 'daniel', 'matthew', 'anthony', 'donald', 'mark', 'paul', 'steven', 'andrew', 'kenneth', 'george', 'joshua', 'kevin', 'brian', 'edward', 'ronald', 'timothy', 'jason', 'jeffrey', 'ryan', 'jacob', 'gary', 'nicholas', 'eric', 'stephen', 'jonathan', 'larry', 'justin', 'scott', 'brandon', 'frank', 'benjamin', 'gregory', 'samuel', 'raymond', 'patrick', 'alexander', 'jack', 'dennis', 'jerry']);\nconst femaleNames = new Set(['mary', 'patricia', 'jennifer', 'linda', 'elizabeth', 'barbara', 'susan', 'jessica', 'sarah', 'karen', 'nancy', 'margaret', 'lisa', 'betty', 'dorothy', 'sandra', 'ashley', 'kimberly', 'donna', 'emily', 'michelle', 'carol', 'amanda', 'melissa', 'deborah', 'stephanie', 'rebecca', 'laura', 'sharon', 'cynthia', 'kathleen', 'amy', 'angela', 'shirley', 'anna', 'ruth', 'brenda', 'pamela', 'nicole', 'katherine', 'samantha', 'christine', 'catherine', 'virginia', 'debra', 'rachel', 'janet', 'emma', 'carolyn', 'maria']);\nexport const predictGender = name => {\n  const firstName = name.trim().split(' ')[0].toLowerCase();\n  if (maleNames.has(firstName)) {\n    return 'male';\n  } else if (femaleNames.has(firstName)) {\n    return 'female';\n  }\n  return 'unknown';\n};","map":{"version":3,"names":["maleNames","Set","femaleNames","predictGender","name","firstName","trim","split","toLowerCase","has"],"sources":["C:/Code/Misc/FamilyPickleball/src/utils/genderPredictor.js"],"sourcesContent":["// Common male and female first names\r\nconst maleNames = new Set([\r\n  'james', 'john', 'robert', 'michael', 'william', 'david', 'richard', 'joseph', 'thomas', 'charles',\r\n  'christopher', 'daniel', 'matthew', 'anthony', 'donald', 'mark', 'paul', 'steven', 'andrew', 'kenneth',\r\n  'george', 'joshua', 'kevin', 'brian', 'edward', 'ronald', 'timothy', 'jason', 'jeffrey', 'ryan',\r\n  'jacob', 'gary', 'nicholas', 'eric', 'stephen', 'jonathan', 'larry', 'justin', 'scott', 'brandon',\r\n  'frank', 'benjamin', 'gregory', 'samuel', 'raymond', 'patrick', 'alexander', 'jack', 'dennis', 'jerry'\r\n]);\r\n\r\nconst femaleNames = new Set([\r\n  'mary', 'patricia', 'jennifer', 'linda', 'elizabeth', 'barbara', 'susan', 'jessica', 'sarah', 'karen',\r\n  'nancy', 'margaret', 'lisa', 'betty', 'dorothy', 'sandra', 'ashley', 'kimberly', 'donna', 'emily',\r\n  'michelle', 'carol', 'amanda', 'melissa', 'deborah', 'stephanie', 'rebecca', 'laura', 'sharon', 'cynthia',\r\n  'kathleen', 'amy', 'angela', 'shirley', 'anna', 'ruth', 'brenda', 'pamela', 'nicole', 'katherine',\r\n  'samantha', 'christine', 'catherine', 'virginia', 'debra', 'rachel', 'janet', 'emma', 'carolyn', 'maria'\r\n]);\r\n\r\nexport const predictGender = (name) => {\r\n  const firstName = name.trim().split(' ')[0].toLowerCase();\r\n  \r\n  if (maleNames.has(firstName)) {\r\n    return 'male';\r\n  } else if (femaleNames.has(firstName)) {\r\n    return 'female';\r\n  }\r\n  \r\n  return 'unknown';\r\n}; "],"mappings":"AAAA;AACA,MAAMA,SAAS,GAAG,IAAIC,GAAG,CAAC,CACxB,OAAO,EAAE,MAAM,EAAE,QAAQ,EAAE,SAAS,EAAE,SAAS,EAAE,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAClG,aAAa,EAAE,QAAQ,EAAE,SAAS,EAAE,SAAS,EAAE,QAAQ,EAAE,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,SAAS,EACtG,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,OAAO,EAAE,SAAS,EAAE,MAAM,EAC/F,OAAO,EAAE,MAAM,EAAE,UAAU,EAAE,MAAM,EAAE,SAAS,EAAE,UAAU,EAAE,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,SAAS,EACjG,OAAO,EAAE,UAAU,EAAE,SAAS,EAAE,QAAQ,EAAE,SAAS,EAAE,SAAS,EAAE,WAAW,EAAE,MAAM,EAAE,QAAQ,EAAE,OAAO,CACvG,CAAC;AAEF,MAAMC,WAAW,GAAG,IAAID,GAAG,CAAC,CAC1B,MAAM,EAAE,UAAU,EAAE,UAAU,EAAE,OAAO,EAAE,WAAW,EAAE,SAAS,EAAE,OAAO,EAAE,SAAS,EAAE,OAAO,EAAE,OAAO,EACrG,OAAO,EAAE,UAAU,EAAE,MAAM,EAAE,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAE,QAAQ,EAAE,UAAU,EAAE,OAAO,EAAE,OAAO,EACjG,UAAU,EAAE,OAAO,EAAE,QAAQ,EAAE,SAAS,EAAE,SAAS,EAAE,WAAW,EAAE,SAAS,EAAE,OAAO,EAAE,QAAQ,EAAE,SAAS,EACzG,UAAU,EAAE,KAAK,EAAE,QAAQ,EAAE,SAAS,EAAE,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,WAAW,EACjG,UAAU,EAAE,WAAW,EAAE,WAAW,EAAE,UAAU,EAAE,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,MAAM,EAAE,SAAS,EAAE,OAAO,CACzG,CAAC;AAEF,OAAO,MAAME,aAAa,GAAIC,IAAI,IAAK;EACrC,MAAMC,SAAS,GAAGD,IAAI,CAACE,IAAI,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;EAEzD,IAAIR,SAAS,CAACS,GAAG,CAACJ,SAAS,CAAC,EAAE;IAC5B,OAAO,MAAM;EACf,CAAC,MAAM,IAAIH,WAAW,CAACO,GAAG,CAACJ,SAAS,CAAC,EAAE;IACrC,OAAO,QAAQ;EACjB;EAEA,OAAO,SAAS;AAClB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}